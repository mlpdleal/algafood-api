spring.datasource.url=jdbc:mysql://localhost/algafood?createDatabaseIfNotExist=true&serverTimezone=UTC
spring.datasource.username=algafood
spring.datasource.password=Algafood@2020

spring.flyway.locations=classpath:db/migration,classpath:db/testdata

#spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto=create

# comando para a geração automática de scripts para criação de tabelas de acordo com o domain/model do projeto
# após gerar os scripts, analise eles, crie as migrations e comente as linhas abaixo referente a criação do ddl.sql
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=src/main/resources/ddl.sql

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL57Dialect

#hikari e o gerenciador do pool de conexoes do spring
#por padrão são criados 10 pool minimos e maximos de conexao com o banco
#spring.datasource.hikari.maximum-pool-size=5
#spring.datasource.hikari.minimum-idle=3
#spring.datasource.hikari.idle-timeout=10000

# Configuração para lançar exception caso seja passado um atributo inesperado no corpo da requisição
spring.jackson.deserialization.fail-on-unknown-properties=true

# Configuração para lançar exception caso seja passado um atributo que seja anotado com JsonIgnore
spring.jackson.deserialization.fail-on-ignored-properties=true

# Configurações para habilitação da chamada dessa exception
spring.mvc.throw-exception-if-no-handler-found=true
spring.resources.add-mappings=false
